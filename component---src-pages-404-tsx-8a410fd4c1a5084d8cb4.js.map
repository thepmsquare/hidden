{"version":3,"file":"component---src-pages-404-tsx-8a410fd4c1a5084d8cb4.js","mappings":"4OAYA,MAAMA,EAA8B,oBAAXC,OAEZC,EAAe,IAAMC,EAAAA,cAAAA,QAAAA,KAAO,aAuEzC,UArEqCC,IAEnC,IAAIC,EAMAC,EAJFD,EADEL,EACkBC,OAAOM,aAAaC,QAAQ,SAE5B,KAGI,OAAtBH,EACFC,EAA0C,SAAtBD,EAA+B,OAAS,SAE5DC,EAAoBG,EAAAA,EAAOH,kBACvBN,GACFC,OAAOM,aAAaG,QAAQ,QAASD,EAAAA,EAAOH,oBAKhD,MAAM,EAACK,EAAU,EAAEC,IAAoBC,EAAAA,EAAAA,UAASP,GAgBhD,IAAIQ,GAAeC,EAAAA,EAAAA,GAAY,CAC7BC,QAAS,CACPC,KAAMN,GAERO,WAAY,CACVC,WAAYV,EAAAA,EAAOW,eAGvB,OACEjB,EAAAA,cAACkB,EAAAA,EAAa,CAACC,MAAOR,GACpBX,EAAAA,cAACoB,EAAAA,EAAI,CAACC,UAAU,OAAOC,QAAM,GAC3BtB,EAAAA,cAAAA,MAAAA,CAAKqB,UAAU,eACbrB,EAAAA,cAACuB,EAAAA,EAAU,CAACC,MAAM,SAASC,MAAM,SAAQ,OAE3B,IACdzB,EAAAA,cAACuB,EAAAA,EAAU,CAACC,MAAM,SAASC,MAAM,SAC9BxB,EAAMyB,SAASC,SAASC,OAAS,GAC9B3B,EAAMyB,SAASC,SAASE,MAAM,EAAG,IAAM,MACvC5B,EAAMyB,SAASC,SAAU,IAAI,wBAGnC3B,EAAAA,cAAC8B,EAAAA,EAAM,CAACC,QAAQ,YAAYC,KAAK,QAAQC,QA1BzBC,gBAChBC,EAAAA,EAAAA,IAAS,IAAI,GAyBsD,mBAGnEnC,EAAAA,cAACoC,EAAAA,EAAW,CACV5B,WAAYA,EACZ6B,uBAtCsBC,IAC9B7B,EAAiB6B,GACbzC,GACFC,OAAOM,aAAaG,QAAQ,QAAS+B,EACvC,MAsCgB,C","sources":["webpack://hidden/./src/pages/404.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport { type HeadFC, type PageProps, navigate } from \"gatsby\";\r\nimport { Button, Typography, Card } from \"@mui/material\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport config from \"../../config\";\r\nimport ThemeToggle from \"../components/ThemeToggle\";\r\nimport \"../stylesheets/404.css\";\r\nimport \"../stylesheets/common.css\";\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\nconst isBrowser = typeof window !== \"undefined\";\r\n\r\nexport const Head: HeadFC = () => <title>Not found</title>;\r\n\r\nconst NotFoundPage: FC<PageProps> = (props) => {\r\n  // get stuff from local storage\r\n  let localStorageTheme;\r\n  if (isBrowser) {\r\n    localStorageTheme = window.localStorage.getItem(\"theme\");\r\n  } else {\r\n    localStorageTheme = null;\r\n  }\r\n  let defaultThemeState: \"dark\" | \"light\";\r\n  if (localStorageTheme !== null) {\r\n    defaultThemeState = localStorageTheme === \"dark\" ? \"dark\" : \"light\";\r\n  } else {\r\n    defaultThemeState = config.defaultThemeState;\r\n    if (isBrowser) {\r\n      window.localStorage.setItem(\"theme\", config.defaultThemeState);\r\n    }\r\n  }\r\n\r\n  // state\r\n  const [themeState, changeThemeState] = useState(defaultThemeState);\r\n\r\n  // functions\r\n\r\n  const customChangeThemeState = (newThemeState: \"dark\" | \"light\") => {\r\n    changeThemeState(newThemeState);\r\n    if (isBrowser) {\r\n      window.localStorage.setItem(\"theme\", newThemeState);\r\n    }\r\n  };\r\n\r\n  const navtigateToHome = async () => {\r\n    await navigate(\"/\");\r\n  };\r\n\r\n  // misc\r\n  let currentTheme = createTheme({\r\n    palette: {\r\n      mode: themeState,\r\n    },\r\n    typography: {\r\n      fontFamily: config.defaultFont,\r\n    },\r\n  });\r\n  return (\r\n    <ThemeProvider theme={currentTheme}>\r\n      <Card className=\"main\" square>\r\n        <div className=\"inside-main\">\r\n          <Typography align=\"center\" color=\"error\">\r\n            404\r\n          </Typography>{\" \"}\r\n          <Typography align=\"center\" color=\"error\">\r\n            {props.location.pathname.length > 10\r\n              ? props.location.pathname.slice(0, 10) + \"...\"\r\n              : props.location.pathname}{\" \"}\r\n            page does not exist.\r\n          </Typography>\r\n          <Button variant=\"contained\" size=\"large\" onClick={navtigateToHome}>\r\n            go to home page\r\n          </Button>\r\n          <ThemeToggle\r\n            themeState={themeState}\r\n            customChangeThemeState={customChangeThemeState}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n"],"names":["isBrowser","window","Head","React","props","localStorageTheme","defaultThemeState","localStorage","getItem","config","setItem","themeState","changeThemeState","useState","currentTheme","createTheme","palette","mode","typography","fontFamily","defaultFont","ThemeProvider","theme","Card","className","square","Typography","align","color","location","pathname","length","slice","Button","variant","size","onClick","async","navigate","ThemeToggle","customChangeThemeState","newThemeState"],"sourceRoot":""}