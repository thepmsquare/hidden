{"version":3,"file":"component---src-pages-decode-share-tsx-718b627124e7535112ce.js","mappings":"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","sources":["webpack://hidden/./node_modules/@mui/icons-material/ContentCopy.js","webpack://hidden/./node_modules/@mui/icons-material/Done.js","webpack://hidden/./node_modules/@mui/icons-material/RestartAlt.js","webpack://hidden/./node_modules/@mui/material/CardMedia/cardMediaClasses.js","webpack://hidden/./node_modules/@mui/material/CardMedia/CardMedia.js","webpack://hidden/./src/pages/decode_share.tsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import React, { FC, useState } from \"react\";\r\nimport { navigate, type HeadFC, type PageProps } from \"gatsby\";\r\nimport { Button, Typography, Card, CardMedia, TextField } from \"@mui/material\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport config from \"../../config\";\r\nimport ThemeToggle from \"../components/ThemeToggle\";\r\nimport CustomSnackbar from \"../components/CustomSnackbar\";\r\nimport type CustomSnackbarStateType from \"../types/CustomSnackbarStateType\";\r\nimport \"../stylesheets/decode_share.css\";\r\nimport \"../stylesheets/common.css\";\r\nimport DoneIcon from \"@mui/icons-material/Done\";\r\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\r\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nconst isBrowser = typeof window !== \"undefined\";\r\n\r\nexport const Head: HeadFC = () => <title>decode share | hidden</title>;\r\n\r\nconst DecodeSharePage: FC<PageProps> = (props) => {\r\n  // get state from props\r\n  interface CustomPropsType {\r\n    selectedImageState: {\r\n      selectedImage: string;\r\n      selectedImageName: string;\r\n      selectedImageType: string;\r\n    };\r\n    finalMessage: string;\r\n    [key: string]: any;\r\n  }\r\n  function isCustomStateType(obj: any): obj is CustomPropsType {\r\n    if (obj && obj !== null) {\r\n      return \"selectedImageState\" in obj && \"finalMessage\" in obj;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  let selectedImageStateProps: CustomPropsType[\"selectedImageState\"];\r\n  let finalMessage: string;\r\n  if (isCustomStateType(props.location.state)) {\r\n    selectedImageStateProps = props.location.state.selectedImageState;\r\n    finalMessage = props.location.state.finalMessage;\r\n  } else {\r\n    if (isBrowser) {\r\n      navigate(\"/\");\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  // get stuff from local storage\r\n  let localStorageTheme;\r\n  if (isBrowser) {\r\n    localStorageTheme = window.localStorage.getItem(\"theme\");\r\n  } else {\r\n    localStorageTheme = null;\r\n  }\r\n  let defaultThemeState: \"dark\" | \"light\";\r\n  if (localStorageTheme !== null) {\r\n    defaultThemeState = localStorageTheme === \"dark\" ? \"dark\" : \"light\";\r\n  } else {\r\n    defaultThemeState = config.defaultThemeState;\r\n    if (isBrowser) {\r\n      window.localStorage.setItem(\"theme\", config.defaultThemeState);\r\n    }\r\n  }\r\n\r\n  // state\r\n  const [themeState, changeThemeState] = useState(defaultThemeState);\r\n  const [snackbarState, changeSnackbarState] =\r\n    useState<CustomSnackbarStateType>({\r\n      isOpen: false,\r\n      message: \"\",\r\n      severity: \"error\",\r\n    });\r\n  const [isCopiedTrue, changeIsCopiedTrue] = useState(false);\r\n\r\n  // functions\r\n  const customChangeThemeState = (newThemeState: \"dark\" | \"light\") => {\r\n    changeThemeState(newThemeState);\r\n    if (isBrowser) {\r\n      window.localStorage.setItem(\"theme\", newThemeState);\r\n    }\r\n  };\r\n\r\n  const navigateToHome = async () => {\r\n    await navigate(\"/\");\r\n  };\r\n  const copyToClipboard = async () => {\r\n    await navigator.clipboard.writeText(finalMessage);\r\n    changeIsCopiedTrue(true);\r\n  };\r\n\r\n  // misc\r\n  let currentTheme = createTheme({\r\n    palette: {\r\n      mode: themeState,\r\n    },\r\n    typography: {\r\n      fontFamily: config.defaultFont,\r\n    },\r\n  });\r\n  return (\r\n    <ThemeProvider theme={currentTheme}>\r\n      <main\r\n        className=\"main\"\r\n        style={{\r\n          backgroundImage: `url(\"${selectedImageStateProps.selectedImage}\")`,\r\n        }}\r\n      >\r\n        <Card className=\"inside-main\">\r\n          {\" \"}\r\n          <CardMedia className=\"custom-card-media\">\r\n            <DoneIcon color=\"success\" fontSize=\"large\" />\r\n            <Typography>your message was decoded successfully.</Typography>\r\n          </CardMedia>\r\n          <TextField\r\n            label=\"message\"\r\n            disabled\r\n            multiline\r\n            rows={3}\r\n            value={finalMessage}\r\n          />\r\n          <Button\r\n            variant={isCopiedTrue ? \"outlined\" : \"contained\"}\r\n            startIcon={<ContentCopyIcon />}\r\n            onClick={copyToClipboard}\r\n          >\r\n            {isCopiedTrue ? \"copy message again\" : \"copy message\"}\r\n          </Button>\r\n          <Button\r\n            onClick={navigateToHome}\r\n            variant=\"outlined\"\r\n            startIcon={<RestartAltIcon />}\r\n          >\r\n            start over\r\n          </Button>\r\n          <ThemeToggle\r\n            themeState={themeState}\r\n            customChangeThemeState={customChangeThemeState}\r\n          />\r\n        </Card>\r\n        <CustomSnackbar\r\n          snackbarState={snackbarState}\r\n          changeSnackbarState={changeSnackbarState}\r\n        />\r\n      </main>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default DecodeSharePage;\r\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","inProps","ref","useThemeProps","children","className","component","image","src","style","other","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","clsx","as","role","undefined","isBrowser","window","Head","React","selectedImageStateProps","finalMessage","obj","location","state","navigate","localStorageTheme","defaultThemeState","selectedImageState","localStorage","getItem","config","setItem","themeState","changeThemeState","useState","snackbarState","changeSnackbarState","isOpen","message","severity","isCopiedTrue","changeIsCopiedTrue","currentTheme","createTheme","palette","mode","typography","fontFamily","defaultFont","ThemeProvider","theme","selectedImage","Card","CardMedia","DoneIcon","color","fontSize","Typography","TextField","label","disabled","multiline","rows","value","Button","variant","startIcon","ContentCopyIcon","onClick","async","navigator","clipboard","writeText","RestartAltIcon","ThemeToggle","customChangeThemeState","newThemeState","CustomSnackbar"],"sourceRoot":""}